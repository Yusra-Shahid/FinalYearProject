[{"D:\\8th semester\\FinalYearProject\\videocall\\src\\index.js":"1","D:\\8th semester\\FinalYearProject\\videocall\\src\\Context.js":"2","D:\\8th semester\\FinalYearProject\\videocall\\src\\App.js":"3","D:\\8th semester\\FinalYearProject\\videocall\\src\\components\\Notifications.jsx":"4","D:\\8th semester\\FinalYearProject\\videocall\\src\\components\\VideoPlayer.jsx":"5","D:\\8th semester\\FinalYearProject\\videocall\\src\\components\\Sidebar.jsx":"6"},{"size":280,"mtime":1655643086708,"results":"7","hashOfConfig":"8"},{"size":2600,"mtime":1655643086704,"results":"9","hashOfConfig":"8"},{"size":1273,"mtime":1655672859949,"results":"10","hashOfConfig":"8"},{"size":630,"mtime":1655643086707,"results":"11","hashOfConfig":"8"},{"size":1496,"mtime":1655643086708,"results":"12","hashOfConfig":"8"},{"size":5607,"mtime":1655675876821,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1militb",{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"24","messages":"25","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26"},"D:\\8th semester\\FinalYearProject\\videocall\\src\\index.js",[],"D:\\8th semester\\FinalYearProject\\videocall\\src\\Context.js",[],"D:\\8th semester\\FinalYearProject\\videocall\\src\\App.js",[],"D:\\8th semester\\FinalYearProject\\videocall\\src\\components\\Notifications.jsx",[],"D:\\8th semester\\FinalYearProject\\videocall\\src\\components\\VideoPlayer.jsx",[],"D:\\8th semester\\FinalYearProject\\videocall\\src\\components\\Sidebar.jsx",["27","28"],"import React, { useState, useContext } from 'react';\r\nimport { Button, TextField, Grid, Typography, Container, Paper } from '@material-ui/core';\r\nimport { CopyToClipboard } from 'react-copy-to-clipboard';\r\nimport { Assignment, Phone, PhoneDisabled } from '@material-ui/icons';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport axios from 'axios';\r\nimport { SocketContext } from '../Context';\r\nimport './sidebar.css';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n  },\r\n  gridContainer: {\r\n    width: '100%',\r\n    [theme.breakpoints.down('xs')]: {\r\n      flexDirection: 'column',\r\n    },\r\n  },\r\n  container: {\r\n    width: '600px',\r\n    margin: '35px 0',\r\n    padding: 0,\r\n    [theme.breakpoints.down('xs')]: {\r\n      width: '80%',\r\n    },\r\n  },\r\n  margin: {\r\n    marginTop: 20,\r\n  },\r\n  padding: {\r\n    padding: 20,\r\n  },\r\n  paper: {\r\n    padding: '10px 20px',\r\n    border: '2px solid black',\r\n  },\r\n  // patient_info: {\r\n  //   width: '30px',\r\n  //   height: '500px',\r\n  //   backgroundColor: 'red',\r\n  // },\r\n}));\r\n\r\nconst Sidebar = ({ children }) => {\r\n  const { me, callAccepted, setName, callEnded, leaveCall, callUser } = useContext(SocketContext);\r\n  const [idToCall, setIdToCall] = useState('');\r\n  const [appid, setappid] = useState('');\r\n  const [PatientName, setPatientName] = useState('');\r\n  const [AppointmentTime, setAppointmentTime] = useState('');\r\n  const [AppointmetDate, setAppointmetDate] = useState('');\r\n  const [active, setactive] = useState('false');\r\n  const [active2, setactive2] = useState('');\r\n  const classes = useStyles();\r\n  const handleclick = async () => {\r\n    axios.post('https://imedcare.herokuapp.com/request/videocall', { appointID: appid, videocallID: me }).then((acc) => {\r\n      console.log(acc);\r\n      setName(acc.data.patient);\r\n      setactive('true');\r\n      setactive2('');\r\n      setPatientName(acc.data.patient);\r\n      setAppointmentTime(acc.data.Time);\r\n      setAppointmetDate(acc.data.Date);\r\n    });\r\n  };\r\n  const handleclick2 = async () => {\r\n    axios.post('https://imedcare.herokuapp.com/request/videocallbydoc', { appointID: idToCall }).then((acc) => {\r\n      console.log(acc);\r\n      setName(acc.data.doctor);\r\n      callUser(acc.data.videocallID);\r\n      // setactive('true');\r\n      // setactive2('');\r\n      // setPatientName(acc.data.patient);\r\n      // setAppointmentTime(acc.data.Time);\r\n      // setAppointmetDate(acc.data.Date);\r\n    });\r\n  };\r\n  return (\r\n    <Container className={classes.container}>\r\n      <Paper elevation={10} className={classes.paper}>\r\n        <form className={classes.root} noValidate autoComplete=\"off\">\r\n          <Grid container className={classes.gridContainer}>\r\n            <Grid item xs={12} md={6} className={classes.padding}>\r\n              <div className=\"ask\"> are you patient?<input type=\"radio\" onChange={() => setactive2('false')} name=\"udertype\" /> are you doctor? <input onChange={() => setactive2('true')} type=\"radio\" name=\"udertype\" /></div>\r\n              {active2 === 'false'\r\n                && (\r\n                  <>\r\n                    <Typography gutterBottom variant=\"h6\">Account Info</Typography>\r\n                    <TextField label=\"enter your Appoiment tracker id\" type=\"email\" value={appid} onChange={(e) => setappid(e.target.value)} fullWidth />\r\n                    <CopyToClipboard text={me} className={classes.margin}>\r\n                      <Button onClick={handleclick} variant=\"contained\" color=\"primary\" fullWidth startIcon={<Assignment fontSize=\"large\" />}>\r\n                        Sumbit\r\n                      </Button>\r\n                      {/* <div>kuch bhi</div> */}\r\n                    </CopyToClipboard>\r\n                  </>\r\n                )}\r\n              {active === 'true'\r\n                && (\r\n                  <div className=\"patient_info\">\r\n                    <div className=\"Patient_details\">\r\n                      <h12> Patient Name : {PatientName}</h12><br /><br />\r\n                      <h13> Appointment Time: {AppointmentTime}</h13><br /><br />\r\n                      <h14> Appointmet Date: {AppointmetDate}</h14><br /><br />\r\n                    </div>\r\n                  </div>\r\n                )}\r\n\r\n            </Grid>\r\n\r\n            {active2 === 'true'\r\n              && (\r\n\r\n                <Grid item xs={12} md={6} className={classes.padding}>\r\n                  <Typography gutterBottom variant=\"h6\">Enter appoint tracker ID to make call</Typography>\r\n                  <TextField label=\"Appoiment Id\" value={idToCall} onChange={(e) => setIdToCall(e.target.value)} fullWidth />\r\n                  {callAccepted && !callEnded ? (\r\n                    <Button variant=\"contained\" color=\"secondary\" startIcon={<PhoneDisabled fontSize=\"large\" />} fullWidth onClick={leaveCall} className={classes.margin}>\r\n                      Hang Up\r\n                    </Button>\r\n                  ) : (\r\n                    <Button variant=\"contained\" color=\"primary\" startIcon={<Phone fontSize=\"large\" />} fullWidth onClick={handleclick2} className={classes.margin}>\r\n                      Call\r\n                    </Button>\r\n                  //    <Button variant=\"contained\" color=\"primary\" startIcon={<Phone fontSize=\"large\" />} fullWidth onClick={() => callUser(idToCall)} className={classes.margin}>\r\n                  //    Call\r\n                  //  </Button>\r\n                  )}\r\n                </Grid>\r\n              )}\r\n          </Grid>\r\n\r\n        </form>\r\n        {children}\r\n      </Paper>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Sidebar;\r\n",{"ruleId":"29","severity":1,"message":"30","line":58,"column":7,"nodeType":"31","messageId":"32","endLine":58,"endColumn":18},{"ruleId":"29","severity":1,"message":"30","line":69,"column":7,"nodeType":"31","messageId":"32","endLine":69,"endColumn":18},"no-console","Unexpected console statement.","MemberExpression","unexpected"]